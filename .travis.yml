sudo: required

language: node_js

python:
  - "3.4"
  - "pypy-5.3.1"

node_js:
  - '13'

services:
  - docker

before_install:
  - gem update --system
  - sudo apt-get install -y python3.4
  - sudo apt-get install --upgrade -y python-pip
  - sudo apt-get install jq
  - sudo pip install --user virtualenv
  # Create a virtual environment for AWS CLI
  # - virtualenv my_py3 --python=/usr/bin/python3.4
  - virtualenv -p python3 my_py3
  - source my_py3/bin/activate
  - pip install --upgrade awscli
  - pip install --upgrade awsebcli
  # Set AWS information
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set default.region us-east-2
  - aws configure set metadata_service_timeout 1200
  - aws configure set metadata_service_num_attempts 3
  - aws configure list

before_script:
  - npm install

script:
  - npm run migrate:test
  - npm run test

after_success:
  - docker image build -t lutaev/richi-fe:latest .
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
      docker tag richi lutaev/richi:latest;
      docker push lutaev/richi:latest;
      ./upload_image.sh $DOCKER_USERNAME $DOCKER_PASSWORD $DEPLOYMENT_BUCKET $DEPLOYMENT_ENV_NAME $APP_NAME $DEPLOYMENT_REGION $IMAGE_NAME $DOCKER_REPOSITORY;
    fi

env:
  global:
    - DOCKER_TAG=latest
    - APP_NAME=richi
    - IMAGE_NAME=richi
    - DOCKER_REPOSITORY=richi
    - IMAGE_NAME=richi
    - DEPLOYMENT_REGION=us-east-2
    - DEPLOYMENT_BUCKET=elasticbeanstalk-us-east-2-929692614802
    - DEPLOYMENT_ENV_NAME=richi-be
    - DOCKER_EMAIL=docker_email
    - secure: "T0XuECJx1B9briDsetJ4cvH+5Z5EnfeGfyTi+RWjMzTKAp3qAmDz5Cb0aGo/TRVXTKY/AvPWPxXxYcx/y+NnEvIv1uqBEAIqP4QU2rOx1nYZxbnDTTZo/PeLiZaQxU9i87EbMC8rcly8z/hrUuYPKhjSL/2vcEnjvMGp3uDRoBXJ+k/vm1/PZgfBKroPguWFmuADiuzy9CtpxkoUglAtDCyMd5uMZRgtv1lQxZXThAIVgnD/zpFsAOBI049os1tH8lhMG/+hxarV74fjyzazksqJOV1qSc/aRbU/Mvbl1NcrLkrnfcl6lfMo0fDE1ZhNJy5+xvXSQoEgLNVcZMu+PgzjZyTbe/iEbuoQwSBM0Fu+HgJkVsYoBlh8CT4oTgsAtpP0oTs4QWnzPKiVbVBy/BkEykZDbwhmgD2yJsNsZskPWlze4VNHP5/BlRznbaXHZx68ubl4GObmTSNu5vRiyBpSowSM7EMlQqyLJqeMiNqUxOXoAZHKsxXyaBnwAbfCBkqt5E6YpglyGAzwXSZaJUqAXh9ydr40nJbbHiGziXpKzVUfhXKJGSvx1PcbvHqyYg2ufPo7lcjsc1RpmmzOd0n7mBUNlhVSKR5YMGm0US3vLCtAEZjjwOZSScg27vn+BkZIbuv01S8Gpn5UVdslgvVxY2x5Jk8PtWQBnUTp4NA="